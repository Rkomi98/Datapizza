name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main # Trigger the action on push to the main branch

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Create new index.html with inline Firebase config
        run: |
          # Create a completely new index.html by copying everything except the firebase-config.js line
          cat > index.html << 'HTMLEOF'
<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Hackathon Voting Game</title>
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet" />
    <link rel="stylesheet" href="style.css" />
    <!-- Firebase SDKs: compat versions for easy integration -->
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-database-compat.js"></script>
</head>
<body>
    <div id="app">
        <!-- Landing choice -->
        <div id="landing" class="panel">
            <h1>Hackathon Voting Game</h1>
            <p>Benvenuto! Scegli il tuo ruolo.</p>
            <div class="btn-group">
                <button id="hostChoice" class="primary">Host</button>
                <button id="playerChoice" class="secondary">Giocatore</button>
            </div>
        </div>

        <!-- Host login -->
        <div id="hostLogin" class="panel hidden">
            <div class="panel-header">
                <button id="backToLanding1" class="back-btn">←</button>
                <h2>Accesso Host</h2>
            </div>
            <p>Inserisci la password per creare una stanza.</p>
            <input type="password" id="hostPassword" placeholder="Password" />
            <button id="hostLoginBtn" class="primary">Login</button>
        </div>

        <!-- Host Hub: list of created rooms or create new -->
        <div id="hostHub" class="panel hidden">
            <div class="panel-header">
                <button id="hubBackToLanding" class="back-btn">←</button>
                <h2>Bentornato, Host!</h2>
            </div>
            <h3>Le tue stanze create</h3>
            <div id="hostRoomList" class="room-list">
                <!-- Room list will be populated here -->
            </div>
            <button id="goToCreateRoomBtn" class="primary">Crea Nuova Stanza</button>
        </div>

        <!-- Host setup: create teams and room -->
        <div id="hostSetup" class="panel hidden">
            <div class="panel-header">
                <button id="backToLanding2" class="back-btn">←</button>
                <h2>Crea la tua stanza</h2>
            </div>
            <div id="teamList" class="team-list"></div>
            <button id="addTeamBtn" class="secondary">Aggiungi Squadra</button>
            <button id="createRoomBtn" class="primary">Crea Stanza</button>
        </div>

        <!-- Host dashboard -->
        <div id="hostDashboard" class="panel hidden">
            <h2>Dashboard Host</h2>
            <p>Codice stanza: <strong id="roomCodeDisplay"></strong></p>
            <div class="dashboard-columns">
                <!-- Left column: controls -->
                <div class="dashboard-left">
                    <h3>Seleziona Team in Valutazione</h3>
                    <div id="hostTeamSelector" class="team-selector"></div>
                    <h3>Timer</h3>
                    <div class="timer-container">
                        <span id="timerDisplay">03:00</span>
                        <button id="timerStartBtn" class="primary">Start</button>
                        <button id="timerStopBtn" class="secondary">Stop</button>
                    </div>
                </div>
                <!-- Right column: results -->
                <div class="dashboard-right">
                    <div class="tabs">
                        <button data-tab="live" class="tab active">Risultati Live</button>
                        <button data-tab="leaderboard" class="tab">Leaderboard Cumulativa</button>
                    </div>
                    <div id="liveResults" class="tab-content active"></div>
                    <div id="leaderboard" class="tab-content hidden"></div>
                </div>
            </div>
        </div>

        <!-- Player join -->
        <div id="playerJoin" class="panel hidden">
            <div class="panel-header">
                <button id="backToLanding3" class="back-btn">←</button>
                <h2>Entra in una stanza</h2>
            </div>
            <input type="text" id="joinRoomCode" placeholder="Codice Stanza" maxlength="6" />
            <button id="joinRoomBtn" class="primary">Entra</button>
        </div>

        <!-- Player team selection -->
        <div id="playerTeamSelect" class="panel hidden">
            <h2>Seleziona il tuo Team</h2>
            <div id="playerTeamList" class="team-selector"></div>
            <button id="confirmTeamBtn" class="primary">Conferma</button>
        </div>

        <!-- Player voting -->
        <div id="playerVoting" class="panel hidden">
            <h2>Valutazione</h2>
            <p id="currentTeamName">Team in valutazione: --</p>
            <div id="ratingForm" class="rating-form"></div>
            <button id="submitVoteBtn" class="primary" disabled>Invia Voto</button>
            <div id="playerTimer" class="timer-display">03:00</div>
            <div id="playerResults" class="player-results"></div>
        </div>
    </div>

    <script>
    const firebaseConfig = {
      apiKey: "${{ secrets.FIREBASE_API_KEY }}",
      authDomain: "${{ secrets.FIREBASE_AUTH_DOMAIN }}",
      databaseURL: "${{ secrets.FIREBASE_DATABASE_URL }}",
      projectId: "${{ secrets.FIREBASE_PROJECT_ID }}",
      storageBucket: "${{ secrets.FIREBASE_STORAGE_BUCKET }}",
      messagingSenderId: "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}",
      appId: "${{ secrets.FIREBASE_APP_ID }}",
      measurementId: "${{ secrets.FIREBASE_MEASUREMENT_ID }}"
    };
    </script>
    <script src="app.js"></script>
</body>
</html>
HTMLEOF

      - name: Verify HTML was created correctly
        run: |
          echo "=== Checking if Firebase config is inline ==="
          grep -A 5 -B 2 "const firebaseConfig" index.html || echo "Config not found in HTML"
          echo "=== Checking that firebase-config.js is NOT referenced ==="
          grep "firebase-config.js" index.html && echo "ERROR: firebase-config.js still referenced!" || echo "SUCCESS: No firebase-config.js reference found"

      - name: Install and Deploy
        run: |
          npm install
          npm install gh-pages --save-dev
          git config --global user.name 'Rkomi98'
          git config --global user.email 'mirko-98@libero.it'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          npx gh-pages -d . -m "Deploy from GitHub Actions" 